//
//  WeatherHomeViewController.swift
//  AppWeather
//
//  Created by Jirawat on 27/10/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol WeatherHomeDisplayLogic: class {
    func presentWeather(res: GetWeatherHomeElement)
    func displayForeCast()

}

final class WeatherHomeViewController: UIViewController, WeatherHomeDisplayLogic {
    @IBOutlet var cityTextField: UITextField!
    @IBOutlet var imageWeather: UIImageView!
    @IBOutlet var tempLabel: UILabel!
    @IBOutlet var humidityLabel: UILabel!
    @IBOutlet var convertBtn: UIButton!

    var interactor: WeatherHomeBusinessLogic?
    var router: (NSObjectProtocol & WeatherHomeRoutingLogic & WeatherHomeDataPassing)?

    var input: String?
    var typeTemp: String? = "f"
    var weather: GetWeatherHomeElement?

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    private func setup() {
        let viewController = self
        let interactor = WeatherHomeInteractor()
        let presenter = WeatherHomePresenter()
        let router = WeatherHomeRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        setPage()
        cityTextField.delegate = self
        cityTextField.addTarget(self, action: #selector(textChange(textField:)), for: .editingChanged)
    }

    private func setPage() {
        title = "Weather"
        convertBtn.isHidden = true
    }
    
    func displayForeCast() {
        performSegue(withIdentifier: "ForeCastPath", sender: self)
    }


    @IBAction func onClick(_ sender: Any) {
        interactor?.fetch(city: input ?? "")
    }

    @IBAction func CelsiusToFahren(_ sender: Any) {
        let celsius = calculatekelvin(kelvin: weather?.main?.temp ?? 0)
        let fahren = calculateFahren(celsius: celsius)
        if typeTemp == "c" {
            tempLabel.text = "temp : \(String(format: "%.0f", celsius)) celsius"
            typeTemp = "f"
        } else {
            tempLabel.text = "temp : \(String(format: "%.0f", fahren)) fahrenheit"
            typeTemp = "c"
        }
    }

    func calculateCelsius(fahren: Double) -> Double {
        var celsius: Double
        celsius = (fahren - 32) * 5 / 9
        return celsius
    }

    func calculateFahren(celsius: Double) -> Double {
        var fahren: Double
        fahren = celsius * 9 / 5 + 32
        return fahren
    }

    func calculatekelvin(kelvin: Double) -> Double {
        var celsius: Double
        celsius = kelvin - 273.15
        return celsius
    }
}

extension WeatherHomeViewController: UITextFieldDelegate {
    @objc func textChange(textField: UITextField) {
        input = textField.text
    }
}

extension WeatherHomeViewController {
    func presentWeather(res: GetWeatherHomeElement) {
        weather = res
        convertBtn.isHidden = false
        if let kelvinTemp = weather?.main?.temp as? Double {
            typeTemp = "f"
            let celsiusTemp = kelvinTemp - 273.15
            tempLabel.text = "temp : \(String(format: "%.0f", celsiusTemp)) celsius"
        }
        if let humidity = weather?.main?.humidity as? Double {
            humidityLabel.text = "humidity : \(humidity) %"
        }
        imageWeather.image = UIImage(named: "\(weather?.weather?[0].icon ?? "")")
    }
}
