//
//  ForeCastHomeViewController.swift
//  AppWeather
//
//  Created by Jirawat on 28/10/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ForeCastHomeDisplayLogic: class
{
    func ForeCast(res:GetWeatherHomeElement)

    func display(weather:GetWeatherHomeElement?)
}

class ForeCastHomeViewController: UIViewController, ForeCastHomeDisplayLogic {
    var interactor: ForeCastHomeBusinessLogic?
    var router: (NSObjectProtocol & ForeCastHomeRoutingLogic & ForeCastHomeDataPassing)?
    
    var fore: GetWeatherHomeElement?


    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: - Setup Clean Code Design Pattern 

    private func setup() {
        let viewController = self
        let interactor = ForeCastHomeInteractor()
        let presenter = ForeCastHomePresenter()
        let router = ForeCastHomeRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: - View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        interactor?.getForeCastDays(city: "")
    }
    
    func display(weather:GetWeatherHomeElement?)
    {
        title = weather?.name
        print("lopdfkosdf",weather?.name ?? "")
    }
}
 
extension ForeCastHomeViewController {
    func ForeCast(res:GetWeatherHomeElement){
        fore = res
    }
}
