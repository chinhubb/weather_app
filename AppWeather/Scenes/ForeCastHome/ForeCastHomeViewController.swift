//
//  ForeCastHomeViewController.swift
//  AppWeather
//
//  Created by Jirawat on 28/10/2564 BE.
//  Copyright (c) 2564 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ForeCastHomeDisplayLogic: class {
    func displayGreeting(viewModel: ForeCastHome.Show.ViewModel)
}

class ForeCastHomeViewController: UIViewController, ForeCastHomeDisplayLogic {
    var interactor: ForeCastHomeBusinessLogic?
    var router: (NSObjectProtocol & ForeCastHomeRoutingLogic & ForeCastHomeDataPassing)?

    @IBOutlet var tableview: UITableView!

    var fore: GetWeatherHomeElement?
    var list: [GetForeCastHomeItemElement]?

    // MARK: Object lifecycle

    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }

    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }

    // MARK: - Setup Clean Code Design Pattern

    private func setup() {
        let viewController = self
        let interactor = ForeCastHomeInteractor()
        let presenter = ForeCastHomePresenter()
        let router = ForeCastHomeRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }

    // MARK: - View lifecycle

    override func viewDidLoad() {
        super.viewDidLoad()
        registerTable()
        showGreeting()
    }

    func showGreeting() {
        let request = ForeCastHome.Show.Request()
        interactor?.showGreeting(request: request)
    }

    private func registerTable() {
        tableview.delegate = self
        tableview.register(UINib(nibName: ForeCastTableViewCell.identifier, bundle: nil), forCellReuseIdentifier: ForeCastTableViewCell.identifier)
    }

    func displayGreeting(viewModel: ForeCastHome.Show.ViewModel) {
        title = viewModel.city
        interactor?.getForeCastDays(city: viewModel.city)
    }
}

extension ForeCastHomeViewController: UITableViewDelegate, UITableViewDataSource {
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return list?.count ?? 0

        print("dspofks", list?.count)
    }

    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        if let cell = tableView.dequeueReusableCell(withIdentifier: ForeCastTableViewCell.identifier) as? ForeCastTableViewCell { cell.render(viewModel: (list?[indexPath.row])!)

            print("podskfopsf", list?[indexPath.row].date)

            return cell
        }
        return UITableViewCell()
    }
}
